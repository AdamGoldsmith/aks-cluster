---
- name: "{{ (state | default('present') == 'present') | ternary('create', 'destroy') }} Azure RG & AKS cluster"
  hosts: localhost
  connection: local
  gather_facts: False

  environment:
    AZURE_SUBSCRIPTION_ID: "{{ lookup('env', 'AZURE_SUBSCRIPTION_ID') }}"
    AZURE_CLIENT_ID: "{{ lookup('env', 'AZURE_CLIENT_ID') }}"
    AZURE_SECRET: "{{ lookup('env', 'AZURE_SECRET') }}"
    AZURE_TENANT: "{{ lookup('env', 'AZURE_TENANT') }}"

  tasks:
    - name: "{{ (state | default('present') == 'present') | ternary('create', 'destroy') }} resource group {{ resource_group }}"
      azure_rm_resourcegroup:
        auth_source: "env"
        name: "{{ resource_group }}"
        location: "{{ location }}"
        state: "{{ state | default('present') }}"
        force: True
        tags:
          Environment: "AKS-Demo"

    - name: "{{ (state | default('present') == 'present') | ternary('create', 'destroy') }} managed AKS cluster {{ aks_name }}"
      azure_rm_aks:
        profile: "default"
        auth_source: "env"
        name: "{{ aks_name }}"
        location: "{{ location }}"
        resource_group: "{{ resource_group }}"
        dns_prefix: "{{ aks_name }}"
        linux_profile:
          admin_username: "{{ username }}"
          ssh_key: "{{ ssh_key }}"
        service_principal:
          client_id: "{{ lookup('env', 'AZURE_CLIENT_ID') }}"
          client_secret: "{{ lookup('env', 'AZURE_SECRET') }}"
        agent_pool_profiles:
          - name: "default"
            count: "{{ vm_count }}"
            vm_size: "{{ vm_size }}"
        state: "present"
        tags:
          Environment: "AKS-Demo"
      register: aks
      when: state | default('present') == 'present'

#    - name: "Show output of AKS results"
#      debug:
#        var: aks

    - name: "Login to Azure"
      command:
        "/usr/bin/az login --service-principal -u {{ lookup('env', 'AZURE_CLIENT_ID') }} -p {{ lookup('env', 'AZURE_SECRET') }} --tenant {{ lookup('env', 'AZURE_TENANT') }}"
      register: az_login

    - name: "Download credentials"
      command:
        "/usr/bin/az aks get-credentials --resource-group {{ resource_group }} --name {{ aks_name }}"
      register: az_creds

    - name: "Show output of AKS results"
      debug:
        var: az_creds

#    - name: "Stat the file"
#      stat:
#        path: "{{ lookup('env', 'WORKSPACE')+'/files/azure-vote.yml' }}"
#      register: stat
#
#    - name: "Debug azure-vote.yml location"
#      debug:
#        var: stat
##        msg: "{{ lookup('env', 'WORKSPACE')+'/files/azure-vote.yml' }}"
#
#    - name: "Set file location fact"
#      set_fact:
#        app_file: "{{ lookup('env', 'WORKSPACE')+'/files/azure-vote.yml' }}"

    - name: "Run the app"
      command:
        "/usr/local/bin/kubectl apply -f {{ lookup('env', 'WORKSPACE')+'/files/azure-vote.yml' }}"
      register: az_runapp
